default_platform(:ios)

platform :ios do
  desc "Build the app"
  lane :build do
    setup_ci
    build_app(
      scheme: "EmojiMaker",
      export_method: "app-store"
    )
  end

  desc "Build and upload to TestFlight"
  lane :beta do
    setup_ci
    # Prefer HTTPS when a token is provided to avoid SSH key issues
    effective_git_url = ENV['MATCH_GIT_URL']
    if ENV['MATCH_GIT_TOKEN'] && effective_git_url && effective_git_url.start_with?('git@github.com:')
      effective_git_url = effective_git_url.sub('git@github.com:', 'https://github.com/')
    end
    UI.message("Using match git_url: #{effective_git_url}")

    # Use App Store Connect API key for match to avoid 2FA prompts
    api_key = app_store_connect_api_key(
      key_id: ENV['APP_STORE_CONNECT_API_KEY_ID'],
      issuer_id: ENV['APP_STORE_CONNECT_ISSUER_ID'],
      key_content: ENV['APP_STORE_CONNECT_KEY'],
      is_key_content_base64: true
    )

    # Default to readonly unless explicitly allowed (only Team Admin/Account Holder can create distribution certs)
    readonly_flag = ENV['MATCH_READONLY'] == 'false' ? false : true
    UI.message("Match readonly: #{readonly_flag}")

    match(
      type: "appstore",
      readonly: readonly_flag,
      git_url: effective_git_url,
      username: ENV['APPLE_ID'],
      team_id: ENV['TEAM_ID'],
      api_key: api_key,
      git_private_key: ENV['MATCH_GIT_PRIVATE_KEY']
    )

    build_app(
      scheme: "EmojiMaker",
      export_method: "app-store"
    )

    upload_to_testflight(
      api_key: api_key,
      skip_waiting_for_build_processing: true
    )
  end
end